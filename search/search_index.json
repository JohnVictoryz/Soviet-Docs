{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Soviet-Linux Docs","text":""},{"location":"#docs-for-diffrent-users","title":"Docs For Diffrent Users","text":"<ul> <li>User Docs</li> <li>Developer Docs</li> </ul>"},{"location":"Developer%20Documentation/","title":"Developer Docs for Soviet-Linux","text":"<p>This is the developer documentation for Soviet-Linux</p>"},{"location":"Developer%20Documentation/#page-index-for-developer-documentation","title":"Page Index for developer documentation","text":"<ul> <li>Making Packages</li> <li>Standard Conventions</li> <li>ecmp files</li> </ul>"},{"location":"Developer%20Documentation/Making%20Packages/","title":"Making Packages for Soviet-Linux","text":"<p>Making packages for OUR Repository is highly apreciated look below to see details on how to make them</p>"},{"location":"Developer%20Documentation/Making%20Packages/#details-about-packages","title":"Details about packages","text":"<p>Every package is made using the .ecmp file format</p>"},{"location":"Developer%20Documentation/Making%20Packages/#making-a-package","title":"Making a Package","text":"<p>You can create a package with two diffrent ways</p>"},{"location":"Developer%20Documentation/Making%20Packages/#using-the-mkspm-program","title":"Using the mkspm program","text":"<p>This is recommended because its more easier to make them this way   mkspm is a python file that is a part of spm-utils and can be obatianed by downloading this</p> <ol> <li>Download mkspm</li> <li>Run <code>mkspm</code> When you run <code>mkspm</code> you should also put the package name followed by a url to where you download the package from so the full command should look like this:</li> </ol> <p><code>mkspm nameofthepackage urltowhereyoudownloadthepackage</code></p> <ol> <li>Make Some Changes When you run <code>mkspm</code> it creates an template .ecmp file meaning that the files needs to be edited so it can be a valid file you should see the .ecmp file format documentation</li> </ol>"},{"location":"Developer%20Documentation/Making%20Packages/#making-it-from-scratch","title":"Making it from scratch","text":"<p>To make an .ecmp file from scratch you should see the .ecmp file format documentation this should help you build a package file</p>"},{"location":"Developer%20Documentation/Making%20Packages/#testing-a-package-file","title":"Testing a package file","text":"<p>This is an essentiall step when you want to make a package so you are sure that package actually works properly   To do this you need spm-test from spm-utils</p> <p>After getting spm-test from spm-utils just run: <code>spm-test packagefilename</code></p>"},{"location":"Developer%20Documentation/Making%20Packages/#commiting-and-contributing-to-our","title":"Commiting and Contributing to OUR","text":""},{"location":"Developer%20Documentation/Making%20Packages/#prequisites","title":"Prequisites","text":"<ul> <li>Github Account</li> <li>Git or Github Desktop or any other git client</li> <li>Basic knowledge of git</li> </ul>"},{"location":"Developer%20Documentation/Making%20Packages/#contributing","title":"Contributing","text":"<ol> <li>Fork the repository</li> <li> <p>Clone your fork:       To clone your fork you can use:</p> <pre><code>git clone linktoyourrepo\n</code></pre> </li> <li> <p>Make your changes (recommended make a new branch when making changes)</p> </li> <li>Rebuild the database using <code>./mkall</code></li> <li> <p>Commit your changes:       To commit your changes you need to stage them you can do this by running:</p> <p>Note: You must Stage the all.db after rebuilding the database</p> <pre><code>git add file\n</code></pre> <p>Or for every every file you changed:</p> <pre><code>git add -A\n</code></pre> <p>Then to commit the changes(it is preffered to sign the commit so they are verified you can visit this for more information)</p> <p>Without signing:</p> <pre><code>git commit \n</code></pre> <p>Signing:</p> <pre><code>git commit -S\n</code></pre> </li> <li> <p>Push your changes:       To push your changes use:</p> <pre><code>git push\n</code></pre> </li> <li> <p>Open PR(Pull Request)</p> </li> </ol>"},{"location":"Developer%20Documentation/Standard%20Conventions/","title":"Standars","text":""},{"location":"Developer%20Documentation/Standard%20Conventions/#sites-to-get-details-about-how-to-build-a-package","title":"Sites to get details about how to build a package","text":"<p>The following are some sites that you should go and see how the install a package:</p> <ul> <li>The Site and documentation of the maker of the package that you make (For example, If you want to make a package about python you should look at python.org for how to build it and install it from scratch)</li> <li>Beyond Linux From Scratch (A.K.A BLFS)</li> <li>Google or any other Search Engine For example, DuckDuckGo</li> </ul>"},{"location":"Developer%20Documentation/Standard%20Conventions/#standard-tools-for-packages-to-use","title":"Standard tools for packages to use","text":"<p>WIP(Work In Progress) currently there aren't any standar tools to use in the packages</p>"},{"location":"Developer%20Documentation/Standard%20Conventions/#standard-downloader","title":"Standard downloader","text":"<p>(currently a github issue, yet to be resolved)</p>"},{"location":"Developer%20Documentation/ecmp/","title":"ECMP Files","text":""},{"location":"Developer%20Documentation/ecmp/#what-are-ecmp-files","title":"What are .ecmp files","text":"<p>.ecmp files are file used to create packages that are installed using CCCP and libspm</p>"},{"location":"Developer%20Documentation/ecmp/#structure","title":"Structure","text":"<p>.ecmp files use a toml like syntaxt to identify themselfs.</p> <p>Example of an .ecmp file:</p> <pre><code>[info] \nname = example\nversion = 1.0.0\ntype = src \nlicense = Example\nurl = example.com \nsha256 = sha256 \n\n[description] \nExample\n\n[dependencies]\nexampledep\n\n[makedependencies]\nexamplebuilddep\n\n[download]\nwget $URL\ntar -xzf \"file\" \n\n[install] \nmake $MAKE_FLAGS\nmake DESTDIR=$BUILD_ROOT install\n\n[special]\necho \"This is SPECIAL\"\n</code></pre> <p>You can see more files in the OUR Repo</p>"},{"location":"Developer%20Documentation/ecmp/#parts-of-an-ecmp-file","title":"Parts of an .ecmp file","text":"<p>An .ecmp is split into 7 parts each with their own purpose or step on installing a package</p>"},{"location":"Developer%20Documentation/ecmp/#info-section","title":"<code>[info]</code> Section","text":"<p>This section contains information about the package and has 6 subparts which are not all required   (Section Required)</p> <ul> <li><code>name</code> The package name same as the package filename (Required)</li> <li><code>version</code> The package version (Required)</li> <li><code>type</code> The way the package is installed like is it compiled the its src is it a binary then its bin (Required)</li> <li><code>url</code> The package download URL (Required)</li> <li><code>sha256</code> The SHA-256 hash of the downloaded file from <code>url</code> section (Required)</li> <li><code>license</code> The license of the package (Not Required)</li> </ul>"},{"location":"Developer%20Documentation/ecmp/#description-section","title":"<code>[description]</code> Section","text":"<p>This section contains a description of the package also markdown is supported on this section   (Section Not Required)</p>"},{"location":"Developer%20Documentation/ecmp/#download-section","title":"<code>[download]</code> Section","text":"<p>This section contains the download command for the package   (Section Required)</p>"},{"location":"Developer%20Documentation/ecmp/#dependencies-section","title":"<code>[dependencies]</code> Section","text":"<p>This section contains a list of dependencies needed by a package (Add Multiple dependencies by adding a newline between the dependencies)   (This Section is required depending on the package)</p>"},{"location":"Developer%20Documentation/ecmp/#makedeps-section","title":"<code>[makedeps]</code> Section","text":"<p>This section contains a list of the dependencies needed by the package at compile time (Add multiple dependencies by adding a newline between the dependencies)   (This Section is required depending on the package)</p>"},{"location":"Developer%20Documentation/ecmp/#install-section","title":"<code>[install]</code> Section","text":"<p>This section is basically a bash script that will install the package by the commands you provide   (Required)</p>"},{"location":"Developer%20Documentation/ecmp/#special-section","title":"<code>[special]</code> Section","text":"<p>This section is a bash script that runs after the installation of a package   (Not Required)</p>"},{"location":"Developer%20Documentation/ecmp/#important-info-about-the-ecmp-files","title":"Important info about the .ecmp files","text":"<p>The .ecmp has some environment variables that can be used through out the .ecmp file here is a list of the available variables:</p> <ol> <li> <p>$NAME Variable This Variable contains the package name (The name is get by the <code>[info]</code> Section)</p> </li> <li> <p>$VERSION Variable This Variable contains the package version (The version is get by the <code>[info]</code> Section)</p> </li> <li> <p>$URL Variable This Variable contains the package URL (The URL is get by the <code>[info]</code> Section)</p> </li> <li> <p>$BUILD_ROOT Variable This Variable contains a fake installation directory given by CCCP and libspm</p> </li> </ol>"},{"location":"User%20Documentation/","title":"User Documentation","text":"<p>This is the User Documentation for Soviet-Linux this is used by people who just want to operate Soviet-Linux</p>"},{"location":"User%20Documentation/#page-index-for-user-documentation","title":"Page Index for user documentation","text":"<ul> <li>Installation</li> <li>CCCP</li> </ul>"},{"location":"User%20Documentation/CCCP/","title":"CCCP","text":""},{"location":"User%20Documentation/CCCP/#what-is-cccp","title":"What is CCCP","text":"<p>CCCP is our custom package manager build in The C Programming Language  and it is desinged to make your life easier dealing with packages using the OUR package repository.</p>"},{"location":"User%20Documentation/CCCP/#how-to-use-cccp","title":"How to use CCCP","text":"<p>CCCP is a command line tool, so you need to know how to use the terminal to use it. Don't worry it's not that bad since we designed  it to be as simple as possible.</p>"},{"location":"User%20Documentation/CCCP/#commands","title":"Commands","text":"<ul> <li> <p>Everyday Options:</p> <ul> <li><code>-h</code> or <code>--help</code> this prints a help message</li> <li><code>-v</code> or <code>--version</code> this prints the version of the package manager</li> <li><code>-i</code> or <code>--install</code> followed by the package name this installs a package from OUR repo</li> <li><code>-r</code> or <code>--remove</code> followed by the package name this removes a package from the system</li> <li><code>-l</code> or <code>--list</code> this lists all the packages that are installed in your system</li> <li><code>-s</code> or <code>--search</code> followed by the package name/query to find a package</li> <li><code>--update</code> checks for any updates in your system</li> <li><code>--upgrade</code> upgrades all the packages that are installed in your system</li> </ul> </li> <li> <p>Advanced Options:</p> <ul> <li><code>-Yy</code> or <code>-Nn</code> to automatically accept or decline the prompts acordingly</li> <li><code>--no-checksum</code> to skip the checksum verification</li> <li><code>-ow</code> or <code>--overwrite</code> this overwrites installed packages</li> <li><code>-dbg</code> or <code>--debug</code> followed by a number from 0 to 4 to indicate the debug level</li> <li><code>--verbose</code> this swtiches to verbose output</li> <li><code>-pkg</code> or <code>--package</code> followed by a path to an .ecmp file to install directly from the file</li> </ul> </li> </ul> <p>Advanced Options should only be used if you know what you are doing</p>"},{"location":"User%20Documentation/installation/","title":"Installation Insturctions","text":"<p>Soviet-Linux is not suitable for daily use but you can try it out by using the following instructions  You can try to install Soviet-Linux using this three diffrent ways</p>"},{"location":"User%20Documentation/installation/#1-using-docker","title":"1. Using Docker","text":""},{"location":"User%20Documentation/installation/#prequisites","title":"Prequisites","text":"<ol> <li>Podman or Docker (Podman Recommended)</li> </ol>"},{"location":"User%20Documentation/installation/#running-the-container","title":"Running the container","text":"<p>Note: If you want this container to preserve changes you've made, remove <code>--rm</code>.</p> <p>For Docker:</p> <pre><code>docker run -it --rm ghcr.io/soviet-linux/soviet:latest /bin/bash\n</code></pre> <p>For Podman:</p> <pre><code>podman run -it --rm ghcr.io/soviet-linux/soviet:latest /bin/bash\n</code></pre>"},{"location":"User%20Documentation/installation/#2-using-chroot","title":"2. Using chroot","text":"<ol> <li>Download the image    To download a testing release you need to join our Discord Server after you join head to the #testing-releases channel and download the latest image</li> <li> <p>Unpack the image     After you donwload the image to unpack it just run:</p> <pre><code>tar -xf \"/path/to/soviet.tar.gz\"\n</code></pre> </li> <li> <p>Create chroot     To create the chroot environment you just run:</p> <pre><code>sudo chroot \"/path/to/soviet\"\n</code></pre> </li> </ol>"},{"location":"User%20Documentation/installation/#3-using-systemd-nspawn","title":"3. Using systemd-nspawn","text":""},{"location":"User%20Documentation/installation/#prequisites_1","title":"Prequisites","text":"<ul> <li>Systemd (required for systemd-nspawn) if you dont have systemd you can use chroot</li> </ul>"},{"location":"User%20Documentation/installation/#creating-systemd-nspawn","title":"Creating systemd-nspawn","text":"<ol> <li>Download the image    To download a testing release you need to join our Discord Server after you join head to the #testing-releases channel and download the latest image</li> <li> <p>Unpack the image     After you donwload the image to unpack it just run:</p> <pre><code>tar -xf \"/path/to/soviet.tar.gz\"\n</code></pre> </li> <li> <p>Create systemd-nspawn     To create the systemd-nspawn environment you just run:</p> <pre><code>systemd-nspawn -bD \"/path/to/soviet\"\n</code></pre> </li> </ol>"},{"location":"User%20Documentation/installation/#login-credentials","title":"Login Credentials","text":"<ul> <li>Username: root</li> <li>Password: sovietlinux</li> </ul>"}]}